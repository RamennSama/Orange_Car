#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef pair<int,int> ii;
#define fi first
#define se second
#define pb push_back
#define ed cout << "\n"
#define no cout << "NO\n"
#define ye cout << "YES\n"
#define FOR(i,l,r) for (int i=l;i<=r;i++)
#define FOD(i,r,l) for (int i=r;i>=l;i--)
#define mem(a,b) memset(a, b, sizeof(a))
#define all(a) a.begin(), a.end()
#define sz(A) (int) A.size()
#define faster() ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
const int N = 2e5 + 15;

unordered_map<int, vector<int>>adj;
vector<int>color;
int n, m;

bool bfs(int u) {
    queue<int>q;
    q.push(u);
    color[u] = 1;
    while(!q.empty()) {
        int u = q.front(); q.pop();
        for(auto v : adj[u]) {
            if(color[v] == -1) {
                color[v] = 1 - color[u];
                q.push(v);
            } else {
                if(color[v] == color[u]) return false;
            }
        }
    }
    return true;
}

bool dfs(int u, int col) {
    color[u] = col;
    for(auto v : adj[u]) {
        if(color[v] == -1) {
            if(!dfs(v, 1 - color[u])) return false;
        } else {
            if(color[v] == color[u]) return false;
        }
    }
    return true;
}

void __init__() {
    cin >> n >> m;
    for(int i = 0; i < m; i++) {
        int x, y;
        cin >> x >> y;
        adj[x].pb(y);
        adj[y].pb(x);
    }
    color.assign(n + 1, -1);
}

void solve() {
    __init__();
    for(int i = 0; i < n; i++) {
        if(color[i] == -1) {
            if(!bfs(i)){ // dfs(i, 0)
				cout << "NO\n"; exit(0);
			}
        }
    }
    // for(int i = 0; i < n; i++) cout << color[i] << ' ';
    // ed;
    cout << "YES\n";
}
// dfs và bfs tô màu khác nhau


int main() {
 //   SET_UP();
    solve();
    return 0;
}
